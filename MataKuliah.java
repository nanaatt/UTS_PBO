/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package utspbo;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Careen Emilza
 */
public class MataKuliah extends javax.swing.JFrame {

    Connection conn;
    Statement stmt;
    PreparedStatement pstmt = null;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/UtsPBO";
    String user = "postgres";
    String password = "189066";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);

    DefaultTableModel model;
    private String kode_mk;

    /**
     * Creates new form MataKuliah
     */
    public MataKuliah() {
        initComponents();
        model = (DefaultTableModel) tblDMK.getModel();
        tampil();
    }

    public void tampil() {
        try {
            // TODO code application logi
            Class.forName(driver);
            String sql = "SELECT * FROM MataKuliah";
            conn = DriverManager.getConnection(koneksi, user, password);
            stmt = conn.createStatement();

            while (!conn.isClosed()) {

                ResultSet rs = stmt.executeQuery(sql);
                tblDMK.setModel(DBUtils.resultSetToTableModel(rs));
                while (rs.next()) {
                    System.out.println(String.valueOf(rs.getObject(1)) + " " + String.valueOf(rs.getObject(2)) + " " + String.valueOf(rs.getObject(3)) + " " + String.valueOf(rs.getObject(4)));
                }
                conn.close();

            }
            stmt.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MataKuliah.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MataKuliah.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadData() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("kode_mk");
        model.addColumn("sks");
        model.addColumn("nama_mk");
        model.addColumn("smt_ajar");

        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);
            stmt = conn.createStatement();
            String sql = "SELECT * FROM MataKuliah";
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("kode_mk"),
                    rs.getString("sks"),
                    rs.getInt("nama_mk"),
                    rs.getString("smt_ajar")
                });
            }

            tblDMK.setModel(model);  // Set model to the table

            rs.close();
            stmt.close();
            conn.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MataKuliah.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblDMK = new javax.swing.JLabel();
        lblKM = new javax.swing.JLabel();
        lblNM = new javax.swing.JLabel();
        lblSK = new javax.swing.JLabel();
        lblSM = new javax.swing.JLabel();
        txtKM = new javax.swing.JTextField();
        txtNM = new javax.swing.JTextField();
        txtSK = new javax.swing.JTextField();
        txtSM = new javax.swing.JTextField();
        btnIN = new javax.swing.JButton();
        btnUP = new javax.swing.JButton();
        btnDEL = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDMK = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDMK.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDMK.setText("DATA MATA KULIAH");

        lblKM.setText("Kode Mata Kuliah:");

        lblNM.setText("Nama Mata Kuliah:");

        lblSK.setText("SKS:");

        lblSM.setText("Semester:");

        txtSK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSKActionPerformed(evt);
            }
        });

        txtSM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSMActionPerformed(evt);
            }
        });

        btnIN.setText("Tambah");
        btnIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnINActionPerformed(evt);
            }
        });

        btnUP.setText("Update");
        btnUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPActionPerformed(evt);
            }
        });

        btnDEL.setText("Delete");
        btnDEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELActionPerformed(evt);
            }
        });

        tblDMK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDMKMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDMK);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(lblDMK))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKM)
                            .addComponent(lblNM)
                            .addComponent(lblSK)
                            .addComponent(lblSM)
                            .addComponent(btnIN))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(btnDEL))
                            .addComponent(txtKM)
                            .addComponent(txtNM)
                            .addComponent(txtSK)
                            .addComponent(txtSM)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDMK)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKM)
                            .addComponent(txtKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNM)
                            .addComponent(txtNM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(lblSK))
                    .addComponent(txtSK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSM)
                    .addComponent(txtSM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIN)
                    .addComponent(btnUP)
                    .addComponent(btnDEL))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSKActionPerformed

    private void txtSMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSMActionPerformed

    private void btnUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPActionPerformed
        // TODO add your handling code here:
        String kode_mk, sks, nama_mk, smt_ajar;
        if (txtKM.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data harus terisi");
        } else if (txtSK.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data harus terisi");
        } else if (txtNM.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data harus terisi");
        } else if (txtSM.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data harus terisi");
        } else {
            try {
                Class.forName(driver);
                String sql = "UPDATE MataKuliah SET sks = ?, nama_mk = ?, smt_ajar = ? WHERE kode_mk = ?";
                conn = DriverManager.getConnection(koneksi, user, password);
                pstmt = conn.prepareStatement(sql);

                kode_mk = txtKM.getText();
                sks = txtSK.getText();
                nama_mk = txtNM.getText();
                smt_ajar = txtSM.getText();

                pstmt.setString(4, kode_mk);
                pstmt.setInt(1, Integer.parseInt(sks));
                pstmt.setString(2, nama_mk);
                pstmt.setInt(3, Integer.parseInt(smt_ajar));

                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Success to update");
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Update");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Tahun terbit harus berupa angka");
            } finally {
                try {
                    if (pstmt != null) {
                        pstmt.close();
                    }
                    if (conn != null) {
                        conn.close();
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error closing resources: " + e.getMessage());
                }
            }
        }
        tampil();
        clear();
    }//GEN-LAST:event_btnUPActionPerformed

    private void btnINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnINActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);
            conn.setAutoCommit(false);
            String sql = "INSERT INTO MataKuliah (kode_mk, sks, nama_mk, smt_ajar) VALUES (?, ?, ?, ?)";
            pstmt = conn.prepareStatement(sql);
            String kode_mk, sks, nama_mk, smt_ajar;
            kode_mk = txtKM.getText();
            sks = txtSK.getText();
            nama_mk = txtNM.getText();
            smt_ajar = txtSM.getText();
            pstmt.setString(1, kode_mk);
            pstmt.setInt(2, Integer.parseInt(sks));
            pstmt.setString(3, nama_mk);
            pstmt.setInt(4, Integer.parseInt(smt_ajar));

            int k = pstmt.executeUpdate();

            if (k > 0) {
                conn.commit();
                JOptionPane.showMessageDialog(null, "Berhasil");
            } else {
                JOptionPane.showMessageDialog(null, "Gagal");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Input Data Gagal: " + e.getMessage());
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver tidak ditemukan: " + ex.getMessage());
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException closeEx) {
                JOptionPane.showMessageDialog(null, "Close Gagal: " + closeEx.getMessage());
            }
        }
        tampil();
        clear();
    }//GEN-LAST:event_btnINActionPerformed

    private void btnDELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);
            conn.setAutoCommit(false);

            String sql = "DELETE FROM MataKuliah WHERE kode_mk = ?";
            pstmt = conn.prepareStatement(sql);
            String kode_mk = txtKM.getText();
            pstmt.setString(1, kode_mk);

            int k = pstmt.executeUpdate();

            if (k > 0) {
                conn.commit();
                JOptionPane.showMessageDialog(null, "Delete Berhasil");
            } else {
                JOptionPane.showMessageDialog(null, "Delete Gagal");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Penghapusan Data Gagal: " + e.getMessage());
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver tidak ditemukan: " + ex.getMessage());
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException closeEx) {
                JOptionPane.showMessageDialog(null, "Close Gagal: " + closeEx.getMessage());
            }
        }
        tampil();
        clear();
    }//GEN-LAST:event_btnDELActionPerformed

    private void tblDMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDMKMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblDMK.getSelectedRow();
        if (selectedRow != -1) {
            String kode_mk = tblDMK.getValueAt(selectedRow, 0).toString();
            int sks = Integer.parseInt(tblDMK.getValueAt(selectedRow, 1).toString());
            String nama_mk = tblDMK.getValueAt(selectedRow, 2).toString();
            int smt_ajar = Integer.parseInt(tblDMK.getValueAt(selectedRow, 3).toString());
            
            txtKM.setText(kode_mk);
            txtSK.setText(String.valueOf(sks));
            txtNM.setText(nama_mk);
            txtSM.setText(String.valueOf(smt_ajar));
        }
    }//GEN-LAST:event_tblDMKMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MataKuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MataKuliah().setVisible(true);
            }
        });
    }
    
    public void clear() {
        txtKM.setText("");
        txtNM.setText("");
        txtSK.setText("");
        txtSM.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDEL;
    private javax.swing.JButton btnIN;
    private javax.swing.JButton btnUP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDMK;
    private javax.swing.JLabel lblKM;
    private javax.swing.JLabel lblNM;
    private javax.swing.JLabel lblSK;
    private javax.swing.JLabel lblSM;
    private javax.swing.JTable tblDMK;
    private javax.swing.JTextField txtKM;
    private javax.swing.JTextField txtNM;
    private javax.swing.JTextField txtSK;
    private javax.swing.JTextField txtSM;
    // End of variables declaration//GEN-END:variables
}
